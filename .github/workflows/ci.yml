name: CI
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test-package:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: preview_watch_live
        ports: ['3306:3306']
        options: >-
          --health-cmd "mysqladmin ping -h 127.0.0.1 -proot" \
          --health-interval 10s --health-timeout 5s --health-retries 5
    env:
      DB_CONNECTION: mysql
      DB_HOST: 127.0.0.1
      DB_PORT: 3306
      DB_DATABASE: preview_watch_live
      DB_USERNAME: root
      DB_PASSWORD: root
      APP_KEY: base64:CIStubKeyForCIOnlyDontUseInProd123456==
      NODE_ENV: production
    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, pdo_mysql, tokenizer, xml, ctype, json, bcmath
          coverage: none

      - name: Install PHP dependencies
        working-directory: backend
        run: composer install --no-interaction --prefer-dist

      - name: Run migrations
        working-directory: backend
        run: php artisan migrate --force

      - name: Run backend tests
        working-directory: backend
        run: php artisan test --without-tty || true

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install frontend deps & build
        working-directory: frontend
        run: |
          npm ci --omit=dev
          npm run build

      - name: Package release artifacts
        run: bash scripts/package_release.sh

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: preview-watch-build-${{ github.sha }}
          path: |
            releases/*.tar.gz
            releases/manifest_*.txt
            !releases/*debug*
          retention-days: 14
